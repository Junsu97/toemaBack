Basic Authentication
    - 사용자 이름 / 비밀번호를 Base64로 인코딩하여 Authorization 헤더에 포함하여 전송됨
    - 매우 안전하지 않음, SSL/TLS와 함께 사용됨

Authorization : Basic ~~~~~~

Bearer Token Authentication
    - 헤얻에 토큰을 포함하여 전송 Authorization 헤더에 포함하여 전송
    - JWT 를 사용하여 인증
    - 간단한 방식, 상태를 유지하지 않음, 확장성이 높음 >> 장점
    - 토큰 노출 위험, 토큰 관리 어려움 >> 단점

Authorization : Bearer ~~~~


OAuth
    - 토큰기반 인증 방식, 사용자가 직접 자격을 증명X 미리 인증받아서 토큰을 발급 받고
    - 이 토큰을 이용하여 API를 요청하는 방식 OAuth2.0
    - 주로 카카오/네이버 등 로그인 API에 사용함

API Key / Session based Authentication


----------------------------------------------------------------------

JWT : 클레임이라고 불리는 정보를 JSON 형태로 안전하게 전송하기 위한 토큰 기반의 표준
    - 인증과 정보 교환에 사용, 서명이 되어 있어서 신뢰성 확보 가능

    1. Header : 토큰의 타입과 사용된 알고리즘 정보를 담고 있음, Base64Url 로 인코딩함
    2. Payload : 클레임 정보, 대상, 발행자, 만료 시간 등 다양한 정보가 포함됨, Base64URL 로 인코딩함
    3. Signature : Header와 Payload, Secret Key를 사용하여 생성된 서명을 나타냄

    인증, 정보교환

    장점
        - 상태 유지 X
        - 간단하고 자기 포함적
        - 확장성이 높음

    단점
        - 크기 : Claim이 많을 수록 토큰의 크기가 커짐
        - 보안 : 서명은 되어있어 신뢰성은 가지지만 암호화는 되어있지 않음, 그래서 중요한 JWT에 포함하면 안됨
        - 토큰 관리 : 만료 시간, 갱신